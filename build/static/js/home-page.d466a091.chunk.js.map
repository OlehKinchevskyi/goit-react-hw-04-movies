{"version":3,"sources":["services/themoviedb-api.js","components/MovieList/MovieList.js","pages/HomePage.js"],"names":["KEY","BASE_URL","IMG_URL","themoviedbAPI","defaultImage","fetchTrendingMovies","fetch","then","res","json","data","results","filter","movieArray","media_type","fetchMoviesWithQuery","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","withRouter","movies","location","map","id","title","to","pathname","routes","state","from","MoviesPage","loading","error","this","setState","catch","toast","message","finally","className","Component"],"mappings":"yIAAA,IAAMA,EAAM,mCACNC,EAAW,gCAEXC,EAAO,qCADG,OACH,KAwCb,IAAMC,EAAgB,CACpBD,UACAE,aAzCgB,UAAMF,EAAN,mCA0ChBG,oBAxCF,WACE,OAAOC,MAAM,GAAD,OAAIL,EAAJ,oCAAwCD,IACjDO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,WAClBJ,MAAK,SAAAI,GAAO,OACXA,EAAQC,QAAO,SAAAC,GAAU,MAA8B,UAA1BA,EAAWC,kBAoC5CC,qBAhCF,SAA8BC,GAC5B,OAAOV,MAAM,GAAD,OACPL,EADO,gCACyBD,EADzB,iCACqDgB,EADrD,gCAGTT,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,YA4BrBM,kBAzBF,SAA2BC,GACzB,OAAOZ,MAAM,GAAD,OACPL,EADO,iBACUiB,EADV,oBAC6BlB,EAD7B,oBAEVO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAuBlBU,eApBF,SAAwBD,GACtB,OAAOZ,MAAM,GAAD,OACPL,EADO,iBACUiB,EADV,4BACqClB,EADrC,oBAEVO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAkBlBW,kBAfF,SAA2BF,GACzB,OAAOZ,MAAM,GAAD,OACPL,EADO,iBACUiB,EADV,4BACqClB,EADrC,2BAGTO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,aAaRR,O,wEC3BAkB,iBAtBG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC3B,OACE,6BACGD,GACCA,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKC,IAAOP,OAAZ,YAAsBG,GAC9BK,MAAO,CACLC,KAAMR,IAJZ,SAQGG,KATID,Y,iKCHEO,E,4MACnBF,MAAQ,CACNR,OAAQ,GACRW,SAAS,EACTC,MAAO,M,kEAGY,IAAD,OAClBC,KAAKC,SAAS,CAAEH,SAAS,IAEzB9B,IACGE,sBACAE,MAAK,SAAAM,GAAU,OAAI,EAAKuB,SAAS,CAAEd,OAAQT,OAC3CwB,OAAM,SAAAH,GACLI,IAAMJ,MAAMA,EAAMK,SAClB,EAAKH,SAAS,CAAEF,MAAOA,EAAMK,aAE9BC,SAAQ,kBAAM,EAAKJ,SAAS,CAAEH,SAAS,S,+BAGlC,IAAD,EACqBE,KAAKL,MAAzBR,EADD,EACCA,OAAQW,EADT,EACSA,QAEhB,OACE,sBAAKQ,UAAU,gBAAf,UACE,gDACCR,EAAU,cAAC,IAAD,IAAc,cAAC,IAAD,CAAWX,OAAQA,W,GA1BZoB","file":"static/js/home-page.d466a091.chunk.js","sourcesContent":["const KEY = '99b92b74df9bbace873ae013dcdaea30';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst imgSize = 'w500';\r\nconst IMG_URL = `https://image.tmdb.org/t/p/${imgSize}/`;\r\nconst defaultImage = `${IMG_URL}wwemzKWzjKYJFfCeiB57q3r4Bcm.png`;\r\n\r\nfunction fetchTrendingMovies() {\r\n  return fetch(`${BASE_URL}trending/all/day?api_key=${KEY}`)\r\n    .then(res => res.json())\r\n    .then(data => data.results)\r\n    .then(results =>\r\n      results.filter(movieArray => movieArray.media_type === 'movie'),\r\n    );\r\n}\r\n\r\nfunction fetchMoviesWithQuery(query) {\r\n  return fetch(\r\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\r\n  )\r\n    .then(res => res.json())\r\n    .then(data => data.results);\r\n}\r\n\r\nfunction fetchMovieDetails(movieId) {\r\n  return fetch(\r\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`,\r\n  ).then(res => res.json());\r\n}\r\n\r\nfunction fetchMovieCast(movieId) {\r\n  return fetch(\r\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\r\n  ).then(res => res.json());\r\n}\r\n\r\nfunction fetchMovieReviews(movieId) {\r\n  return fetch(\r\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`,\r\n  )\r\n    .then(res => res.json())\r\n    .then(data => data.results);\r\n}\r\n\r\nconst themoviedbAPI = {\r\n  IMG_URL,\r\n  defaultImage,\r\n  fetchTrendingMovies,\r\n  fetchMoviesWithQuery,\r\n  fetchMovieDetails,\r\n  fetchMovieCast,\r\n  fetchMovieReviews,\r\n};\r\n\r\nexport default themoviedbAPI;","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport routes from '../../routes';\r\n\r\nconst MovieList = ({ movies, location }) => {\r\n  return (\r\n    <ul>\r\n      {movies &&\r\n        movies.map(({ id, title }) => (\r\n          <li key={id}>\r\n            <Link\r\n              to={{\r\n                pathname: `${routes.movies}/${id}`,\r\n                state: {\r\n                  from: location,\r\n                },\r\n              }}\r\n            >\r\n              {title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieList);","import React, { Component } from 'react';\r\nimport themoviedbAPI from '../services/themoviedb-api';\r\nimport { toast } from 'react-toastify';\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport MovieList from '../components/MovieList/MovieList';\r\n\r\nexport default class MoviesPage extends Component {\r\n  state = {\r\n    movies: [],\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    themoviedbAPI\r\n      .fetchTrendingMovies()\r\n      .then(movieArray => this.setState({ movies: movieArray }))\r\n      .catch(error => {\r\n        toast.error(error.message);\r\n        this.setState({ error: error.message });\r\n      })\r\n      .finally(() => this.setState({ loading: false }));\r\n  }\r\n\r\n  render() {\r\n    const { movies, loading } = this.state;\r\n\r\n    return (\r\n      <div className=\"MainContainer\">\r\n        <h1>Trending today</h1>\r\n        {loading ? <Spinner /> : <MovieList movies={movies} />}\r\n      </div>\r\n    );\r\n  }\r\n}"],"sourceRoot":""}